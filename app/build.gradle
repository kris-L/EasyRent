apply plugin: 'com.android.application'

android {

    signingConfigs {
        release {
          storeFile file('mykey/kris_key.keystore')
            keyAlias 'kris'
            keyPassword 'lszqq3476426'
            storePassword 'lszqq3476426'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        multiDexEnabled true
        applicationId "com.rent.kris.easyrent"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 3
        versionName "1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
    }
    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    splits {
        abi {
            include 'armeabi-v7a','armeabi'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }

    }

    productFlavors {
        default_channel {}
        huawei {}
        oppo {}
        xiaomi {}
        yiyongbao {}
        vivo {}
        _360 {}
        wandoujia {}
        sanxing {}
        meizu {}
        yingyonghui {}
        lianxiang {}
        kuan {}
        leshi {}
        sougou {}
    }


    //定义一个装apk文件路径的数组
    def fileArray = []
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.contains('release')) {
                //获取每个打包产物
                def variantProd = variant.productFlavors[0]
                def fileName = "${variantProd.name}" + "_V${variant.versionName}.apk"
                println "自定义输出apk的名字:" + fileName;
                outputFileName = fileName;
                println "输出apk地址:" + outputFile.parentFile.absolutePath + java.io.File.separator + fileName
                fileArray.add(outputFile.parentFile.absolutePath + java.io.File.separator + fileName);
            }
        }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'
    compile project(path: ':lib-dialog')
    implementation project(':lib-custom-view')
    implementation rootProject.ext.deps.retrofit
    implementation rootProject.ext.deps.glide
    //轮播图
    implementation 'com.youth.banner:banner:1.4.10'
    implementation project(':common-module')
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'com.android.support:multidex:1.0.1'
    implementation rootProject.ext.deps.eventbus
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
}
